services:
  odoo:
    container_name: dija-odoo
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - BASE_IMAGE_REF=${BASE_IMAGE_REF:?Please set ODOO_VERSION in .env file}
      - SERVER_WIDE_MODULES=${SERVER_WIDE_MODULES}
      - ODOO_ARGS=${ODOO_ARGS}
    ports:
      - "8070:8069"
      - "5678:5678"
    stdin_open: true
    tty: true
    volumes:
      - ../config:/opt/odoo/config:ro
      - ../extra-addons:/opt/odoo/extra-addons:ro
      - ../dija-addons:/opt/odoo/dija-addons:ro
      - ../server:/opt/odoo/server:ro
      - ../test-addons:/opt/odoo/test-addons:ro
      - ../smile-addons:/opt/odoo/smile-addons:ro
      - ../upgrades:/opt/odoo/upgrades:ro
      - odoo_data:/var/lib/odoo:rw
    entrypoint:
      - "python3"
      - "-m"
      - "debugpy"
      - "--listen"
      - "0.0.0.0:5678"
    command: server/odoo-bin -c config/odoo.conf --load ${SERVER_WIDE_MODULES:-base,web,smile_upgrade} ${ODOO_ARGS}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8070/web/login || exit 1
      interval: 10s
      timeout: 300s
      retries: 30

  db:
    container_name: dija-db
    image: postgres:14
    ports:
      - "5440:5432"
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=odoo
    volumes:
      - data_postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U odoo -d odoo
      interval: 2s
      timeout: 5s
      retries: 30

  mailcatcher:
    image: dockage/mailcatcher:0.8.2
    ports:
      - "2086:2080"

volumes:
  odoo_data:
  data_postgres:
